AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation deploys a login/remote desktop server.
  This host will be a submission client to the LSF cluster.

  **WARNING** This template creates AWS resources.
  You will be billed for the AWS resources used if you create a stack from this template.

Metadata:
  Authors:
    Description: Matt Morris (morrmt@amazon.com)
  License:
    Description: |
      Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.

      Permission is hereby granted, free of charge, to any person obtaining a copy of
      this software and associated documentation files (the "Software"), to deal in
      the Software without restriction, including without limitation the rights to
      use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
      the Software, and to permit persons to whom the Software is furnished to do so.

      THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
      FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
      COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
      IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
      CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'

Mappings:
  RegionMap:
    us-east-1:  
      CentOS75: ami-9887c6e7
      FPGADev15: ami-0da0d9ed98b33a214
      ALinux2: ami-035be7bafff33b6b6
    us-west-1:
      CentOS75: ami-074e2d6769f445be5
      FPGADev15: ami-04b152df7fb645142
      ALinux2: ami-0799ad445b5727125
    us-west-2:
      CentOS75: ami-3ecc8f46
      FPGADev15: ami-0d0bd43b0b6c54f6f
      ALinux2: ami-032509850cf9ee54e
    eu-west-1:           # Dublin
      CentOS75: ami-3548444c
      FPGADev15: ami-0d86116010d6cae11
      ALinux2: ami-0fad7378adf284ce0
    ap-southeast-1:      # Singapore
      CentOS75: ami-8e0205f2
      FPGADev15: ami-021384cdd418eedaa
      ALinux2: ami-04677bdaa3c2b6e24
    ap-southeast-2:      # Sydney
      CentOS75: ami-d8c21dba
      FPGADev15: ami-0e4b6096be3f361cc
      ALinux2: ami-0c9d48b5db609ad6e

Parameters:
  AdminKeyPair:
    Description: "Name of an existing EC2 KeyPair to enable SSH access to this instance."
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "morrmt"
    AllowedPattern: ".+"
  LoginServerInstanceType:
    Description: "The desired instance type for this instance."
    Type: "String"
    Default: "t3.medium"
    AllowedValues:
      - t3.medium
      - t3.xlarge
      - m4.xlarge
      - m4.2xlarge
      - m5.xlarge
      - m5.2xlarge
  LoginServerAMI:
    Description: "This should be the same AMI that is used for the compute nodes."
    Type: "String"
    Default: FPGADev15
    AllowedValues:
      - ALinux2
      - CentOS75
      - FPGADev15
  LSFClusterName:
    Default: LSFCluster
    Description: An environment name that will be prefixed to resource names
    Type: String
  LSFInstallPath:
    Description: "From NFS template. Shared NFS file system for installing LSF. Derive this from an Export or Parameter Store key."
    Type: "String"
    Default: "/tools/ibm/lsf"
  FileSystemMountPoint:
    Description: The local directory on which the NFS file system is mounted
    Type: String
    Default: /ec2-nfs
    AllowedPattern: ^/.+
  ScratchDir:
    Description: The name for the runtime scratch data subdirectory
    Type: String
    Default: scratch
    AllowedPattern: ^.+
  ProjectDir:
    Description: The name for the project design data subdirectory
    Type: String
    Default: proj
    AllowedPattern: ^.+

Resources:
  LoginServerInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: !Ref LoginServerInstanceType
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - !Ref AWS::Region
        - !Ref LoginServerAMI
      SubnetId:
          Fn::ImportValue: !Join [ '-', [ !Ref LSFClusterName,"PublicSubnet" ] ]
      SecurityGroupIds:
        - Fn::ImportValue: !Join [ '-', [ !Ref LSFClusterName,"LoginServerSG" ] ]
      KeyName: !Ref AdminKeyPair
      IamInstanceProfile: !Ref LoginServerInstanceProfile
      Tags:
        - 
          Key: "Name"
          Value: !Join [ '-', [ 'Login Server',!Ref LSFClusterName ] ]
        - 
          Key: "Cluster"
          Value: !Ref LSFClusterName
      UserData:
        Fn::Base64: 
          Fn::Sub:
            - |
              #!/bin/bash

              set -x
              exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1

              echo "*** BEGIN LOGIN SERVER BOOTSTRAP ***"

              export LSF_INSTALL_DIR="${LSFInstallPath}/${LSFClusterName}"
              export LSF_INSTALL_DIR_ROOT="/`echo $LSF_INSTALL_DIR | cut -d / -f2`"

              # Install cfn-signal helper script to signal bootstrap completion to CloudFormation
              #yum update -y aws-cfn-bootstrap

              # Install SSM so we can use SSM Session Manager and avoid ssh logins.
              yum install -q -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
              systemctl enable amazon-ssm-agent
              systemctl start amazon-ssm-agent

              ## Mount NFS file system for LSF install
              ## and create working directories

              # mount points
              mkdir $LSF_INSTALL_DIR_ROOT
              mkdir ${FileSystemMountPoint}
              
              # mount EFS file system
              mount -t nfs4 -o rw,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${LSFEFSFileSystemFQDN}:/ $LSF_INSTALL_DIR_ROOT
              # mount NFS file system
              mount ${NFSServerExport} ${FileSystemMountPoint}

              # create project and scratch directories
              mkdir ${FileSystemMountPoint}/{${ScratchDir},${ProjectDir}} \
                && chmod 777 ${FileSystemMountPoint}/{${ScratchDir},${ProjectDir}}

              #add to fstab
              echo "${LSFEFSFileSystemFQDN}:/ $LSF_INSTALL_DIR_ROOT nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 0 0" >> \
                /etc/fstab

              # Set up LSF envirionment
              echo "source $LSF_INSTALL_DIR/conf/profile.lsf" > /etc/profile.d/lsf.sh

              echo "*** END LOGIN SERVER BOOTSTRAP ***"
            -
              LSFEFSFileSystemFQDN:
                Fn::ImportValue: !Join [ '-', [ !Ref LSFClusterName,"LSFEFSFileSystemFQDN" ] ]
              NFSServerExport:
                Fn::ImportValue: !Join [ '-', [ !Ref LSFClusterName,"NFSServerExport" ] ]

  LoginServerRole:
      Type: "AWS::IAM::Role"
      Properties:
        Path: "/"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - 
              Effect: Allow
              Principal:
                Service:
                - "ec2.amazonaws.com"
              Action:
              - "sts:AssumeRole"
        ManagedPolicyArns:
          - "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
          - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
        Policies:
          - PolicyName: DcvLicenseBucketPolicy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetObject
                  Resource: arn:aws:s3:::dcv-license.us-east-1/*

  LoginServerInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref LoginServerRole

Outputs:
  LoginServerPublicIp:
    Description: Login Server Public IP
    Value: !GetAtt LoginServerInstance.PublicIp
    